[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mikko Vihtakari. Author, maintainer.            Institute Marine Research","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vihtakari M (2024). ggFishPlots: Visualise Calculate Life History Parameters Fisheries Science using 'ggplot2'. R package version 0.3.0, https://deepwaterimr.github.io/ggFishPlots/.","code":"@Manual{,   title = {ggFishPlots: Visualise and Calculate Life History Parameters for Fisheries Science using 'ggplot2'},   author = {Mikko Vihtakari},   year = {2024},   note = {R package version 0.3.0},   url = {https://deepwaterimr.github.io/ggFishPlots/}, }"},{"path":"/index.html","id":"ggfishplots","dir":"","previous_headings":"","what":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"Visualise calculate life history parameters fisheries science using ggplot2. R package version 0.3.0","code":""},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"ggFishPlots package R allows quickly plotting calculating life history parameters required stock assessment models. package uses ggplot2 plotting tidyverse packages calculations. ggOceanMaps package developed Institute Marine Research. Note package comes absolutely warranty. bug reports code fixes warmly welcomed. See Contributions details. looking similar packages, make sure check AquaticLifeHistory, FSA, fishmethods packages, well FishR webpage.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"date version package can always found GitHub. CRAN version work shown examples website, try installing GitHub version. can using devtools remotes packages.","code":"remotes::install_github(\"DeepWaterIMR/ggFishPlots\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"package website. time writing, package produces four kinds plots: growth curves, maturity plots, length-weight relationships, catch curves. function returns ggplot2 plot estimated parameters text string can used Rmarkdown Shiny applications well data frame use parameters. elements returned list. package contains example data illustrate functionality.","code":""},{"path":"/index.html","id":"growth-curves","dir":"","previous_headings":"Usage","what":"Growth curves","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"Note text params returned list together plot.  text object can rendered R markdown documents using results = 'asis' setting code chunk header (.e. {r, results = 'asis'}) cat() function replacing \"\\n\" \"\\  n\": von Bertalanffy growth function coefficients: Linf (asymptotic average length) = 91.2 cm +/- 88.3 - 94.6 (95% CIs) K (growth rate coefficient) = 0.0633 +/- 0.059 - 0.068 (95% CIs) t0 (age length 0) = -3.04 (years) +/- -3.337 - -2.769 (95% CIs) tmax (life span; t0 + 3/K) = 44.4 years Number included specimens = 10401 Total number measured = 618779 Excluded (length age missing): Length = 0; age = 608378","code":"library(ggFishPlots)  data(survey_ghl) # example data  head(survey_ghl) #> # A tibble: 6 × 5 #>     age sex   length weight maturity #>   <dbl> <chr>  <dbl>  <dbl>    <int> #> 1    NA <NA>      35     NA        0 #> 2    NA <NA>      43     NA        0 #> 3    NA <NA>      51     NA        0 #> 4    NA <NA>      31     NA        0 #> 5    NA <NA>      32     NA        0 #> 6    NA <NA>      32     NA        0 plot_growth(survey_ghl, length = \"length\", age = \"age\") #> $plot #>  #> $text #> [1] \"von Bertalanffy growth function coefficients:  \\n Linf (asymptotic average length) = 91.2 cm +/- 88.3 - 94.6 (95% CIs)  \\n K (growth rate coefficient) = 0.0633 +/- 0.059 - 0.068 (95% CIs)  \\n t0 (age at length 0) = -3.04 (years) +/- -3.337 - -2.769 (95% CIs)  \\n tmax (life span; t0 + 3/K) = 44.4 years  \\n Number of included specimens = 10401  \\n Total number of measured = 618779  \\n Excluded (length or age missing):  \\n Length = 0; age = 608378\" #>  #> $params #> # A tibble: 3 × 7 #>   term  estimate std.error statistic   p.value conf.low conf.high #>   <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> #> 1 Sinf   91.2      1.51         60.3 0          88.3      94.6    #> 2 K       0.0633   0.00231      27.4 4.90e-160   0.0586    0.0680 #> 3 t0     -3.04     0.139       -21.8 1.71e-103  -3.34     -2.77 htmlcat <- function(text){   cat(gsub(pattern = \"\\n\", replacement = \"  \\n\", x = text)) }  htmlcat(plot_growth(survey_ghl)$text)"},{"path":"/index.html","id":"split-by-sex","dir":"","previous_headings":"Usage > Growth curves","what":"Split by sex","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"Specifying length, age sex arguments omitted since argument names default example data. plot element returned time.  dashed lines Sinf. Data behind growth curves shown box plots default. possible plot data points defining boxplot = FALSE. can also force zero group curves know length . Assumed 14 cm . Zero group forcing strength 10 % number observations default can adjusted using force.zero.group.strength argument.","code":"plot_growth(survey_ghl, split.by.sex = TRUE)$plot plot_growth(survey_ghl, force.zero.group.length = 14, boxplot = FALSE)$plot"},{"path":[]},{"path":"/index.html","id":"l50-plots","dir":"","previous_headings":"Usage > Maturity plots","what":"L50 plots","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"Maturity ogives estimated using logistic (family = binomial(link = \"logit\")) glm()  error bars represent 95% confidence intervals calculated model object using confint() function back-transformed original scale. grey stepped line binned average defined using length.bin.width argument. function also contains option bootstrap confidence intervals (CIs) produce narrower CIs. Bootstrapping probably correct way estimating CIs application. Using 10 replicates save processing time. real application use least 1000.","code":"plot_maturity(survey_ghl, length = \"length\", maturity = \"maturity\") #> $plot #>  #> $text #> [1] \"50% maturity at length (L50) based on logit regressions:\\n54.784 cm. 95% confidence intervals: 52.852 - 56.787\\n  Number of specimens: 64265.\\n Confidence intervals estimated from the glm object.\" #>  #> $params #>       mean   ci.min ci.max  sex intercept     slope     n #> 1 54.78361 52.85249 56.787 both -5.755492 0.1050587 64265 plot_maturity(survey_ghl, bootstrap.n = 10) #> $plot #>  #> $text #> [1] \"50% maturity at length (L50) based on logit regressions:\\n54.812 cm. 95% confidence intervals: 54.584 - 54.924\\n  Number of specimens: 64265\\n\\n Confidence intervals estimated using 10 bootstrap replicates.\" #>  #> $params #>       mean   ci.min   ci.max  sex intercept     slope     n #> 1 54.81204 54.58416 54.92397 both -5.755492 0.1050587 64265"},{"path":"/index.html","id":"split-by-sex-1","dir":"","previous_headings":"Usage > Maturity plots","what":"Split by sex","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"","code":"plot_maturity(survey_ghl, split.by.sex = TRUE)$plot"},{"path":"/index.html","id":"a50-plots","dir":"","previous_headings":"Usage > Maturity plots","what":"A50 plots","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"principle can used produce A50 (50% maturity age) plots:","code":"plot_maturity(survey_ghl, length = \"age\", length.unit = \"years\",               xlab = \"Age\", length.bin.width = 1, split.by.sex = TRUE)$plot"},{"path":"/index.html","id":"addition-of-juveniles","dir":"","previous_headings":"Usage > Maturity plots","what":"Addition of juveniles","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"Also plot_maturity() function option add juveniles (zero group fish). addition juveniles can necessary make glm() converge small immature fish scarce dataset.  Note addition increases estimate males dataset contain sufficient number young males number females seems sufficient females mature older species. One option can estimate number added juveniles using plot_catchcurve() function:","code":"plot_maturity(survey_ghl, length = \"age\", length.unit = \"years\",               xlab = \"Age\", length.bin.width = 1,                force.zero.group.length = 0,               force.zero.group.strength = 100,               split.by.sex = TRUE)$plot plot_maturity(survey_ghl, length = \"age\", length.unit = \"years\",               xlab = \"Age\", length.bin.width = 1,                force.zero.group.length = 0,               force.zero.group.n = c(\"F\" = exp(11.363), \"M\" = exp(11.885)),               split.by.sex = TRUE)$plot"},{"path":[]},{"path":"/index.html","id":"log-linearized-models","dir":"","previous_headings":"Usage > Length-weight relationships","what":"Log-linearized models","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"Simple plot using log-transformation linear models default.  dashed lines represent 95% confidence intervals.","code":"plot_lw(survey_ghl, length = \"length\", weight = \"weight\") #> $plot #>  #> $text #> [1] \"Logarithm transformed linear length-weight model. Not splitted by sex:  \\n a = 3.8236e-06 +/- 3.7869e-06 - 3.8606e-06 (95% CIs).  \\n b = 3.221 +/- 3.22 - 3.22 (95% CIs).  \\n Length in cm and weight in kg  \\n Number of included specimens = 67457  \\n Total number of measured = 618779  \\n Excluded (data missing): \\n Length = 0; weight = 551322; outlier = 0\" #>  #> $params #> # A tibble: 2 × 14 #>   term    estimate std.error statistic p.value   conf.low  conf.high r.squared #>   <chr>      <dbl>     <dbl>     <dbl>   <dbl>      <dbl>      <dbl>     <dbl> #> 1 a     0.00000382   0.00491    -2540.       0 0.00000379 0.00000386     0.989 #> 2 b     3.22         0.00128     2519.       0 3.22       3.22           0.989 #> # ℹ 6 more variables: AIC <dbl>, nobs <int>, length <chr>, length.unit <chr>, #> #   weight <chr>, weight.unit <chr>"},{"path":"/index.html","id":"non-linear-least-square-models","dir":"","previous_headings":"Usage > Length-weight relationships","what":"Non-linear least square models","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"Use non-linear least squares instead:","code":"plot_lw(survey_ghl, use.nls = TRUE) #> $plot #>  #> $text #> [1] \"Nonlinear least squares length-weight model. Not splitted by sex:  \\n a = 1.7268e-06 +/- 1.6962e-06 - 1.758e-06 (95% CIs).  \\n b = 3.419 +/- 3.42 - 3.42 (95% CIs).  \\n Length in cm and weight in kg  \\n Number of included specimens = 67457  \\n Total number of measured = 618779  \\n Excluded (data missing): \\n Length = 0; weight = 551322; outlier = 0\" #>  #> $params #> # A tibble: 2 × 13 #>   term    estimate  std.error statistic p.value conf.low conf.high     AIC  nobs #>   <chr>      <dbl>      <dbl>     <dbl>   <dbl>    <dbl>     <dbl>   <dbl> <int> #> 1 a     0.00000173    1.56e-8      110.       0  1.70e-6   1.76e-6 -27925. 67457 #> 2 b     3.42          2.15e-3     1590.       0  3.42e+0   3.42e+0 -27925. 67457 #> # ℹ 4 more variables: length <chr>, length.unit <chr>, weight <chr>, #> #   weight.unit <chr>"},{"path":"/index.html","id":"split-by-sex-2","dir":"","previous_headings":"Usage > Length-weight relationships","what":"Split by sex","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"decimal point b estimates depends length weight units. FishBase uses centimeters grams. function can correct units asked (length.unit weight.unit parameters defined correctly).  can also transform parameters according formulas given FishBase.","code":"plot_lw(survey_ghl, split.by.sex = TRUE, correct.units = TRUE) #> $plot #>  #> $text #> [1] \"Logarithm transformed linear length-weight model for females and males, respectively:  \\n a = 0.0035 +/- 0.00344 - 0.00355 (95% CIs) and 0.00507 +/- 0.00497 - 0.00517 (95% CIs).  \\n b = 3.247 +/- 3.24 - 3.25 (95% CIs) and 3.143 +/- 3.14 - 3.15 (95% CIs).  \\n Length in cm and weight in g  \\n Number of included specimens = 34889 and 30354  \\n Total number of measured = 618779  \\n Excluded (data missing): \\n Length = 0; weight = 456891; sex = 96645; outlier = 0\" #>  #> $params #> # A tibble: 4 × 15 #> # Groups:   sex [2] #>   sex   term  estimate std.error statistic p.value conf.low conf.high r.squared #>   <chr> <chr>    <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>     <dbl> #> 1 F     a      0.00350   0.00765     -739.       0  0.00344   0.00355     0.988 #> 2 F     b      3.25      0.00195     1666.       0  3.24      3.25        0.988 #> 3 M     a      0.00507   0.0101      -525.       0  0.00497   0.00517     0.979 #> 4 M     b      3.14      0.00265     1188.       0  3.14      3.15        0.979 #> # ℹ 6 more variables: AIC <dbl>, nobs <int>, length <chr>, length.unit <chr>, #> #   weight <chr>, weight.unit <chr> plot_lw(survey_ghl %>% dplyr::mutate(weight = weight*1000), weight.unit = \"g\")$params #> # A tibble: 2 × 14 #>   term  estimate std.error statistic p.value conf.low conf.high r.squared #>   <chr>    <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>     <dbl> #> 1 a      0.00382   0.00491    -1133.       0  0.00379   0.00386     0.989 #> 2 b      3.22      0.00128     2519.       0  3.22      3.22        0.989 #> # ℹ 6 more variables: AIC <dbl>, nobs <int>, length <chr>, length.unit <chr>, #> #   weight <chr>, weight.unit <chr>"},{"path":"/index.html","id":"log-log-axes-to-see-differences","dir":"","previous_headings":"Usage > Length-weight relationships","what":"Log-log axes to see differences","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"","code":"plot_lw(survey_ghl, split.by.sex = TRUE, log.axes = TRUE)$plot"},{"path":"/index.html","id":"outlier-removal","dir":"","previous_headings":"Usage > Length-weight relationships","what":"Outlier removal","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"","code":"plot_lw(survey_ghl, outlier.percentile = 99.5, annotate.coefficients = TRUE)$plot"},{"path":"/index.html","id":"catch-curves-to-estimate-instantaneous-total-mortality-z","dir":"","previous_headings":"Usage","what":"Catch curves to estimate instantaneous total mortality (Z)","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"Catch curves added version 0.2.3 may available CRAN version. FishR tutorial written Ogle (2013) contains nice explanation catch curves. time writing ggFishPlots calculates simple log-linearised regression.  ages included Z estimation can adjusted using age.range argument.  plot , -b Z (.e. Z = 0.356) exp() (.e. 68391) number 0 age fish assuming constant mortality.","code":"plot_catchcurve(survey_ghl) #> $plot #>  #> $text #> [1] \"Instantenous total mortality (Z) estimated using a catch curve and\\nage range .\\n\\nZ = 0.19 (0.123-0.257 95% CIs)\\nN at age 0 = 1448 (449-4674 95% CIs)\\nLongevity = 38.3 years (23.8 - 68.8 95% CIs)\\n\\n\" #>  #> $params #> # A tibble: 2 × 8 #>   sex   term        estimate std.error statistic  p.value conf.low conf.high #>   <chr> <chr>          <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 both  (Intercept)    7.28     0.573      12.7  2.25e-13    6.11      8.45  #> 2 both  age           -0.190    0.0328     -5.79 2.85e- 6   -0.257    -0.123 plot_catchcurve(survey_ghl, age.range = c(10,26))$plot"},{"path":"/index.html","id":"split-by-sex-3","dir":"","previous_headings":"Usage > Catch curves to estimate instantaneous total mortality (Z)","what":"Split by sex","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"Use named list use separate age ranges females males.  Parameter estimates catch curve : Instantenous total mortality (Z) estimated using catch curve age range females males. Females: Z = 0.37 (0.31-0.431 95% CIs) N age 0 = 86119 (25990-285354 95% CIs) Longevity = 30.7 years (23.6 - 40.5 95% CIs) Males: Z = 0.511 (0.492-0.53 95% CIs) N age 0 = 145002 (105241-199785 95% CIs) Longevity = 23.3 years (21.8 - 24.8 95% CIs)","code":"plot_catchcurve(survey_ghl, age.range = c(10,26), split.by.sex = TRUE)$plot tmp <- plot_catchcurve(survey_ghl, age.range = list(\"F\" = c(13,26), \"M\" = c(10,26)), split.by.sex = TRUE)  tmp$plot htmlcat(tmp$text)"},{"path":"/index.html","id":"citations-and-data-sources","dir":"","previous_headings":"","what":"Citations and data sources","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"data used package property Institute Marine Research Norwegian Government. distributed Creative Commons (CCBY NLOD) licenses allowing free use long source (IMR) cited. ask user refer package plots estimates used reports scientific articles. --date citation information, please use:","code":"citation(\"ggFishPlots\") #> To cite package 'ggFishPlots' in publications use: #>  #>   Vihtakari M (2024). _ggFishPlots: Visualise and Calculate Life #>   History Parameters for Fisheries Science using 'ggplot2'_. R package #>   version 0.3.0, <https://deepwaterimr.github.io/ggFishPlots/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {ggFishPlots: Visualise and Calculate Life History Parameters for Fisheries Science using 'ggplot2'}, #>     author = {Mikko Vihtakari}, #>     year = {2024}, #>     note = {R package version 0.3.0}, #>     url = {https://deepwaterimr.github.io/ggFishPlots/}, #>   }"},{"path":"/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Visualise and Calculate Life History Parameters for Fisheries Science using ggplot2","text":"contributions package welcome. Please contact package maintainer Mikko Vihtakari (mikko.vihtakari@hi.) discuss ideas improving package. Bug reports corrections submitted directly GitHub site. Please include minimal reproducible example. Considerable contributions package development credited authorship.","code":""},{"path":"/reference/plot_catchcurve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot catch curve — plot_catchcurve","title":"Plot catch curve — plot_catchcurve","text":"Plot catch curve estimate instantaneous total mortality (Z) using age data","code":""},{"path":"/reference/plot_catchcurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot catch curve — plot_catchcurve","text":"","code":"plot_catchcurve(   dt,   age = \"age\",   sex = \"sex\",   time = NULL,   age.range = NULL,   female.sex = \"F\",   male.sex = \"M\",   split.by.sex = FALSE,   base_size = 8,   legend.position = \"bottom\" )"},{"path":"/reference/plot_catchcurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot catch curve — plot_catchcurve","text":"dt data.frame, tibble data.table age Character argument giving name age column dt sex Character argument giving name sex column dt. Ignored split..sex == FALSE. time Split analysis time? NULL, data assumed stem one time point. Using character argument giving name time column splits analysis unique values column produces faceted plot. age.range Defines age range used Z estimation. NULL, ages used. numeric vector length 2, first number defines minimum age include last number maximum age. also possible use differing ranges sex split..sex = TRUE: use named list  length two names referring female.sex male.sex. Provide numeric vector length 2 element (first number defining minimum age include last number maximum age). See Examples. female.sex, male.sex character integer denoting female male sex sex column dt, respectively. split..sex Logical indicating whether result split sex. base_size Base size parameter ggplot. See ggtheme. legend.position Position ggplot legend character. See ggtheme.","code":""},{"path":"/reference/plot_catchcurve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot catch curve — plot_catchcurve","text":"Calculates plots basic log-linearized catch curve estimate instantaneous mortality. See e.g. Ogle (2013).","code":""},{"path":"/reference/plot_catchcurve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot catch curve — plot_catchcurve","text":"Mikko Vihtakari // Institute Marine Research.","code":""},{"path":"/reference/plot_catchcurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot catch curve — plot_catchcurve","text":"","code":"# Catch curve including all ages data(survey_ghl) plot_catchcurve(survey_ghl) #> $plot  #>  #> $text #> [1] \"Instantenous total mortality (Z) estimated using a catch curve and\\nage range .\\n\\nZ = 0.19 (0.123-0.257 95% CIs)\\nN at age 0 = 1448 (449-4674 95% CIs)\\nLongevity = 38.3 years (23.8 - 68.8 95% CIs)\\n\\n\" #>  #> $params #> # A tibble: 2 × 8 #>   sex   term        estimate std.error statistic  p.value conf.low conf.high #>   <chr> <chr>          <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 both  (Intercept)    7.28     0.573      12.7  2.25e-13    6.11      8.45  #> 2 both  age           -0.190    0.0328     -5.79 2.85e- 6   -0.257    -0.123 #>  # \\donttest{ # Specific ages plot_catchcurve(survey_ghl, age.range = c(10,26)) #> $plot  #>  #> $text #> [1] \"Instantenous total mortality (Z) estimated using a catch curve and\\nage range 10-26.\\n\\nZ = 0.356 (0.312-0.401 95% CIs)\\nN at age 0 = 68394 (29985-156005 95% CIs)\\nLongevity = 31.2 years (25.7 - 38.3 95% CIs)\\n\\n\" #>  #> $params #> # A tibble: 2 × 8 #>   sex   term        estimate std.error statistic  p.value conf.low conf.high #>   <chr> <chr>          <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 both  (Intercept)   11.1      0.387       28.8 1.54e-14   10.3      12.0   #> 2 both  age           -0.356    0.0207     -17.2 2.81e-11   -0.401    -0.312 #>  # Split by sex plot_catchcurve(survey_ghl, age.range = c(10,26), split.by.sex = TRUE) #> $plot  #>  #> $text #> [1] \"Instantenous total mortality (Z) estimated using a catch curve and\\nage range 10-26 for both sexes.\\n\\nFemales:\\nZ = 0.31 (0.256-0.365 95% CIs)\\nN at age 0 = 23925 (8625-66368 95% CIs)\\nLongevity = 32.5 years (24.8 - 43.4 95% CIs)\\n\\nMales:\\nZ = 0.511 (0.492-0.53 95% CIs)\\nN at age 0 = 145002 (105241-199785 95% CIs)\\nLongevity = 23.3 years (21.8 - 24.8 95% CIs)\" #>  #> $params #> # A tibble: 4 × 8 #>   sex   term        estimate std.error statistic  p.value conf.low conf.high #>   <chr> <chr>          <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 F     (Intercept)   10.1     0.479        21.1 1.49e-12    9.06     11.1   #> 2 F     age           -0.310   0.0257      -12.1 3.87e- 9   -0.365    -0.256 #> 3 M     (Intercept)   11.9     0.147        80.8 8.62e-18   11.6      12.2   #> 4 M     age           -0.511   0.00866     -59.0 3.72e-16   -0.530    -0.492 #>  # Split by sex, separate age.range plot_catchcurve(survey_ghl, age.range = list(\"F\" = c(13,26), \"M\" = c(10,26)), split.by.sex = TRUE) #> $plot  #>  #> $text #> [1] \"Instantenous total mortality (Z) estimated using a catch curve and\\nage range  for females and  for males.\\n\\nFemales:\\nZ = 0.37 (0.31-0.431 95% CIs)\\nN at age 0 = 86119 (25990-285354 95% CIs)\\nLongevity = 30.7 years (23.6 - 40.5 95% CIs)\\n\\nMales:\\nZ = 0.511 (0.492-0.53 95% CIs)\\nN at age 0 = 145002 (105241-199785 95% CIs)\\nLongevity = 23.3 years (21.8 - 24.8 95% CIs)\" #>  #> $params #> # A tibble: 4 × 8 #>   sex   term        estimate std.error statistic  p.value conf.low conf.high #>   <chr> <chr>          <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 F     (Intercept)   11.4     0.550        20.7 9.51e-11   10.2      12.6   #> 2 F     age           -0.370   0.0276      -13.4 1.38e- 8   -0.431    -0.310 #> 3 M     (Intercept)   11.9     0.147        80.8 8.62e-18   11.6      12.2   #> 4 M     age           -0.511   0.00866     -59.0 3.72e-16   -0.530    -0.492 #>  # }"},{"path":"/reference/plot_growth.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot age-length relationships and growth curves — plot_growth","title":"Plot age-length relationships and growth curves — plot_growth","text":"Plot age-length relationships growth curves","code":""},{"path":"/reference/plot_growth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot age-length relationships and growth curves — plot_growth","text":"","code":"plot_growth(   dt,   length = \"length\",   age = \"age\",   sex = \"sex\",   female.sex = \"F\",   male.sex = \"M\",   length.unit = \"cm\",   split.by.sex = FALSE,   growth.model = 1,   force.zero.group.length = NA,   force.zero.group.strength = 10,   force.zero.group.cv = 0,   show.Linf = TRUE,   boxplot = TRUE,   base_size = 8,   legend.position = \"bottom\" )"},{"path":"/reference/plot_growth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot age-length relationships and growth curves — plot_growth","text":"dt data.frame, tibble data.table length Character argument giving name length column dt age Character argument giving name age column dt sex Character argument giving name sex column dt. Ignored split..sex == FALSE. female.sex, male.sex character integer denoting female male sex sex column dt, respectively. length.unit character argument giving unit length. used labels figure. split..sex Logical indicating whether result split sex. growth.model Integer defining growth model. 1 = von Bertalanffy, 2 = Gompertz, 3 = Logistic. force.zero.group.length Numeric indicating length 0-group forced. Use NA ignore forcing. force.zero.group.strength Numeric indicating many percent total fish added specified force.zero.group.length. force.zero.group.cv Numeric indicating coefficient variation forced 0-group length. Resulting lengths randomly generated normal distribution. show.Linf Logical indicating whether Linf values shown dashed vertical lines. boxplot Logical indicating whether boxplots (TRUE) used show data points (FALSE) base_size Base size parameter ggplot. See ggtheme. legend.position Position ggplot legend character. See ggtheme.","code":""},{"path":"/reference/plot_growth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot age-length relationships and growth curves — plot_growth","text":"list containing plot, text Rmarkdown Shiny applications, estimated parameters (params).","code":""},{"path":"/reference/plot_growth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot age-length relationships and growth curves — plot_growth","text":"Uses fishmethods::growth function calculate growth curves. Zero group length can forced growth functions using force.zero.group.* parameters.","code":""},{"path":"/reference/plot_growth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot age-length relationships and growth curves — plot_growth","text":"Mikko Vihtakari // Institute Marine Research.","code":""},{"path":"/reference/plot_growth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot age-length relationships and growth curves — plot_growth","text":"","code":"# Simple plot. Note that a list is returned. data(survey_ghl) plot_growth(survey_ghl, length = \"length\", age = \"age\") #> $plot  #>  #> $text #> [1] \"von Bertalanffy growth function coefficients:  \\n Linf (asymptotic average length) = 91.2 cm +/- 88.3 - 94.6 (95% CIs)  \\n K (growth rate coefficient) = 0.0633 +/- 0.059 - 0.068 (95% CIs)  \\n t0 (age at length 0) = -3.04 (years) +/- -3.337 - -2.769 (95% CIs)  \\n tmax (life span; t0 + 3/K) = 44.4 years  \\n Number of included specimens = 10401  \\n Total number of measured = 618779  \\n Excluded (length or age missing):  \\n Length = 0; age = 608378\" #>  #> $params #> # A tibble: 3 × 7 #>   term  estimate std.error statistic   p.value conf.low conf.high #>   <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> #> 1 Sinf   91.2      1.51         60.3 0          88.3      94.6    #> 2 K       0.0633   0.00231      27.4 4.90e-160   0.0586    0.0680 #> 3 t0     -3.04     0.139       -21.8 1.71e-103  -3.34     -2.77   #>  # \\donttest{ # Split by sex plot_growth(survey_ghl, split.by.sex = TRUE)$plot  # Data as points. Forcing zero group to 10 cm plot_growth(survey_ghl, force.zero.group.length = 10, boxplot = FALSE)$plot  # }"},{"path":"/reference/plot_lw.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot length-weight relationships — plot_lw","title":"Plot length-weight relationships — plot_lw","text":"Plots length-weight relationship species calculates b coefficients used length-weight conversions.","code":""},{"path":"/reference/plot_lw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot length-weight relationships — plot_lw","text":"","code":"plot_lw(   dt,   length = \"length\",   weight = \"weight\",   sex = \"sex\",   female.sex = \"F\",   male.sex = \"M\",   length.unit = \"cm\",   weight.unit = \"kg\",   split.by.sex = FALSE,   xlab = \"Total length\",   ylab = \"Weight\",   use.nls = FALSE,   init.a = NULL,   init.b = NULL,   log.axes = FALSE,   outlier.percentile = NULL,   annotate.coefficients = FALSE,   correct.units = FALSE,   base_size = 8,   legend.position = \"bottom\",   point.size = 0.5,   verbose = TRUE )"},{"path":"/reference/plot_lw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot length-weight relationships — plot_lw","text":"dt data.frame, tibble data.table length Character argument giving name length column dt weight Character argument giving name age column dt sex Character argument giving name sex column dt. Ignored split..sex == FALSE. female.sex, male.sex character integer denoting female male sex sex column dt, respectively. length.unit Character argument giving unit length. used labels figure conversion coefficient. Allowed values conversion: \"mm\" (millimeters), \"cm\" (centimeters), \"m\" (meters). weight.unit Character argument giving unit weight. used labels figure conversion coefficient. Allowed values: \"g\" (grams), \"kg\" (kilograms), \"t\" (metric tons). split..sex Logical indicating whether result split sex. xlab Character giving x-axis label without unit ylab Character giving x-axis label without unit. use.nls Logical indicating whether parameters estimated using nonlinear least squares (nls; TRUE) method log-log transformed linear model (lm; FALSE) method. See details. init., init.b Numeric values giving starting value b coefficients respectively non-linear least-squares estimation (.e. use.nls = TRUE). NULL (default) starting values guessed. log.axes Logical indicating whether logarithmic axes used instead Cartesian ones. outlier.percentile Numeric argument giving probability percent value used calculate residual quantiles outlier removal. See details. Values > 99 recommended. NULL (default), outlier removal conducted. annotate.coefficients Logical indicating whether b coefficients annotated plot. correct.units Logical indicating whether b coefficients converted centimeters grams FishBase. base_size Base size parameter ggplot. See ggtheme. legend.position Position ggplot legend character. See ggtheme. point.size Numeric defining size data points plot. See size argument geom_point. verbose Logical indicating whether return warnings messages.","code":""},{"path":"/reference/plot_lw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot length-weight relationships — plot_lw","text":"list three elements: ggplot object containing plot, text giving central statistics can pasted Markdown, model parameters (params).","code":""},{"path":"/reference/plot_lw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot length-weight relationships — plot_lw","text":"function estimates b coefficients length weight relationship, \\(weight = \\times length^b\\), plots data. model can fitted either using standard log(weight) ~ log(length) regression (lm; default) nonlinear least squares (nls) method. nls method often manages fit steeper slopes making b parameter higher parameter lower linear lm method. tends lead visually pleasing fits high lengths weights. b coefficients dependent units length weight. models, length weight units often match data going model, comparisons FishBase, units length weight centimeters grams, respectively. units wrong, intercept, , FishBase scale orders magnitude (see FishBase). correct.units can used correct data units FishBase standard (cm g). function also returns warning returned parameters within expected bounds cm g estimation. recommended compare b coefficients FishBase species quality assurance. outlier.percentile argument enables quick removal troublesome outliers model estimation. argument defined percentile probabilities used calculate quantile absolute residual values logarithmic regression identify outliers (\\(outlier = |r| > Pr[|r| > outlier.percentile/100]\\)). outliers removed model dataset plotted using crosses ggplot output. See Examples.","code":""},{"path":"/reference/plot_lw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot length-weight relationships — plot_lw","text":"Mikko Vihtakari // Institute Marine Research.","code":""},{"path":"/reference/plot_lw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot length-weight relationships — plot_lw","text":"","code":"data(survey_ghl)  # Simple plot plot_lw(survey_ghl, length = \"length\", weight = \"weight\") #> $plot  #>  #> $text #> [1] \"Logarithm transformed linear length-weight model. Not splitted by sex:  \\n a = 3.8236e-06 +/- 3.7869e-06 - 3.8606e-06 (95% CIs).  \\n b = 3.221 +/- 3.22 - 3.22 (95% CIs).  \\n Length in cm and weight in kg  \\n Number of included specimens = 67457  \\n Total number of measured = 618779  \\n Excluded (data missing): \\n Length = 0; weight = 551322; outlier = 0\" #>  #> $params #> # A tibble: 2 × 14 #>   term    estimate std.error statistic p.value   conf.low  conf.high r.squared #>   <chr>      <dbl>     <dbl>     <dbl>   <dbl>      <dbl>      <dbl>     <dbl> #> 1 a     0.00000382   0.00491    -2540.       0 0.00000379 0.00000386     0.989 #> 2 b     3.22         0.00128     2519.       0 3.22       3.22           0.989 #> # ℹ 6 more variables: AIC <dbl>, nobs <int>, length <chr>, length.unit <chr>, #> #   weight <chr>, weight.unit <chr> #>  # \\donttest{ # nls plot_lw(survey_ghl, use.nls = TRUE) #> $plot  #>  #> $text #> [1] \"Nonlinear least squares length-weight model. Not splitted by sex:  \\n a = 1.7268e-06 +/- 1.6962e-06 - 1.758e-06 (95% CIs).  \\n b = 3.419 +/- 3.42 - 3.42 (95% CIs).  \\n Length in cm and weight in kg  \\n Number of included specimens = 67457  \\n Total number of measured = 618779  \\n Excluded (data missing): \\n Length = 0; weight = 551322; outlier = 0\" #>  #> $params #> # A tibble: 2 × 13 #>   term    estimate  std.error statistic p.value conf.low conf.high     AIC  nobs #>   <chr>      <dbl>      <dbl>     <dbl>   <dbl>    <dbl>     <dbl>   <dbl> <int> #> 1 a     0.00000173    1.56e-8      110.       0  1.70e-6   1.76e-6 -27925. 67457 #> 2 b     3.42          2.15e-3     1590.       0  3.42e+0   3.42e+0 -27925. 67457 #> # ℹ 4 more variables: length <chr>, length.unit <chr>, weight <chr>, #> #   weight.unit <chr> #>   # Split by sex, annotate coefficients plot_lw(survey_ghl, split.by.sex = TRUE, annotate.coefficients = TRUE)$plot   # Outlier removal plot_lw(survey_ghl, outlier.percentile = 99) #> $plot  #>  #> $text #> [1] \"Logarithm transformed linear length-weight model. Not splitted by sex:  \\n a = 3.74e-06 +/- 3.7064e-06 - 3.7738e-06 (95% CIs).  \\n b = 3.227 +/- 3.22 - 3.23 (95% CIs).  \\n Length in cm and weight in kg  \\n Number of included specimens = 67457  \\n Total number of measured = 618779  \\n Excluded (data missing): \\n Length = 0; weight = 551322; outlier = 675\" #>  #> $params #> # A tibble: 2 × 14 #>   term    estimate std.error statistic p.value   conf.low  conf.high r.squared #>   <chr>      <dbl>     <dbl>     <dbl>   <dbl>      <dbl>      <dbl>     <dbl> #> 1 a     0.00000374   0.00460    -2717.       0 0.00000371 0.00000377     0.991 #> 2 b     3.23         0.00120     2697.       0 3.22       3.23           0.991 #> # ℹ 6 more variables: AIC <dbl>, nobs <int>, length <chr>, length.unit <chr>, #> #   weight <chr>, weight.unit <chr> #>  # }"},{"path":"/reference/plot_maturity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot maturity ogive — plot_maturity","title":"Plot maturity ogive — plot_maturity","text":"Plots estimate length age 50% mature dataset","code":""},{"path":"/reference/plot_maturity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot maturity ogive — plot_maturity","text":"","code":"plot_maturity(   dt,   length = \"length\",   maturity = \"maturity\",   sex = \"sex\",   split.by.sex = FALSE,   female.sex = \"F\",   male.sex = \"M\",   length.unit = \"cm\",   length.bin.width = 2,   bootstrap.n = NA,   force.zero.group.length = NA,   force.zero.group.strength = NA,   force.zero.group.n = NA,   force.zero.group.cv = 0,   xlab = \"Total length\",   base_size = 8,   legend.position = \"bottom\",   ... )"},{"path":"/reference/plot_maturity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot maturity ogive — plot_maturity","text":"dt data.frame, tibble data.table length Character argument giving name length (age) column dt maturity Character argument giving name maturity column dt. either logical (TRUE == mature, FALSE == immature) integer (1 == mature, 0 == immature). sex Character argument giving name sex column dt. Ignored split..sex == FALSE. split..sex Logical indicating whether result split sex. female.sex, male.sex character integer denoting female male sex sex column dt, respectively. length.unit character argument giving unit length. used labels figure. length.bin.width Numeric specifying increment (delta length) length data binned calculate maturity proportions. Use NULL remove plot. bootstrap.n Integer defining number bootstrap replicates used calculate 95% confidence intervals mean 50% mature estimate. NA (default), confidence intervals calculated glm object without boostrapping. See Details. force.zero.group.length Numeric indicating length 0-group (immatures) forced. Use NA ignore forcing. force.zero.group.strength Numeric indicating many percent total fish added specified force.zero.group.length. used simultaneously force.zero.group.n force.zero.group.n Numeric indicating many observations added specified force.zero.group.length. split..sex = TRUE, use named vector length two names referring female.sex male.sex. used simultaneously force.zero.group.strength force.zero.group.cv Numeric indicating coefficient variation forced 0-group (immature) length. Resulting lengths randomly generated normal distribution. xlab Character giving x-axis label without unit base_size Base size parameter ggplot. See ggtheme. legend.position Position ggplot legend character. See ggtheme. ... Additional arguments passed geom_density_ridges.","code":""},{"path":"/reference/plot_maturity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot maturity ogive — plot_maturity","text":"Returns ggplot2 tibble depending plot argument showing maturity ogives.","code":""},{"path":"/reference/plot_maturity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot maturity ogive — plot_maturity","text":"95% confidence intervals mean 50% mature estimate calculated using glm function default. routine might optimal zero group fish added. Hence, function contains option bootstrap confidence intervals using number data observations (.e. excluding added data number randomly resampled rows). Adding integer bootstrap.n argument turns feature. Note confidence intervals calculated way tend narrower glm() confidence intervals.","code":""},{"path":"/reference/plot_maturity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot maturity ogive — plot_maturity","text":"Mikko Vihtakari // Institute Marine Research.","code":""},{"path":"/reference/plot_maturity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot maturity ogive — plot_maturity","text":"","code":"# Simple L50 plot data(survey_ghl) plot_maturity(survey_ghl, length = \"length\", maturity = \"maturity\") #> Warning: Ignoring unknown parameters: `size` #> $plot #> Picking joint bandwidth of 1.21  #>  #> $text #> [1] \"50% maturity at length (L50) based on logit regressions:\\n54.784 cm. 95% confidence intervals: 52.852 - 56.787\\n  Number of specimens: 64265.\\n Confidence intervals estimated from the glm object.\" #>  #> $params #>       mean   ci.min ci.max  sex intercept     slope     n #> 1 54.78361 52.85249 56.787 both -5.755492 0.1050587 64265 #>  # \\donttest{ # Bootstrapped CIs are narrower than the glm ones plot_maturity(survey_ghl, bootstrap.n = 10) #> Warning: Ignoring unknown parameters: `size` #> $plot #> Picking joint bandwidth of 1.21  #>  #> $text #> [1] \"50% maturity at length (L50) based on logit regressions:\\n54.793 cm. 95% confidence intervals: 54.706 - 54.884\\n  Number of specimens: 64265\\n\\n Confidence intervals estimated using 10 bootstrap replicates.\" #>  #> $params #>       mean   ci.min  ci.max  sex intercept     slope     n #> 1 54.79348 54.70635 54.8836 both -5.755492 0.1050587 64265 #>   # A50 plot, split by sex plot_maturity(survey_ghl, length = \"age\", length.unit = \"years\", xlab = \"Age\", length.bin.width = 1, split.by.sex = TRUE)$plot #> Picking joint bandwidth of 0.602   # Add juveniles plot_maturity(survey_ghl, length = \"age\", length.unit = \"years\", xlab = \"Age\", length.bin.width = 1, split.by.sex = TRUE, force.zero.group.length = 0, force.zero.group.strength = 100)$plot #> Picking joint bandwidth of 0.638  # }"}]
